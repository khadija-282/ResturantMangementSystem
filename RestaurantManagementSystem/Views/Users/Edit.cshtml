@model RestaurantManagementSystem.Models.UserViewModel

@{
    ViewBag.Title = "Edit User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section class="content-header">
    <h1></h1>
    <ol class="breadcrumb"></ol>
</section>

<div class="box box-primary">
    <div class="box-header">
        <h3 class="box-title">@ViewBag.Title</h3>

    </div>

    @using (Html.BeginForm("Edit", "Users", FormMethod.Post, new { @class = "frm-parsley-validate" }))
    {
        @Html.AntiForgeryToken()
        <div class="box-body">

            <div class="form-group col-md-6">


                @Html.HiddenFor(m => m.Id)
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <label for="Email">Email</label>
                    <input type="email" class="form-control" placeholder="Enter Email" id="Email" name="Email" value="@Model.Email" required />
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    @Html.HiddenFor(m => m.Email)

                </div>
                <div class="form-group">
                    <label for="Password">Password</label>
                    <input type="password" class="form-control" placeholder="Enter Password" id="Password" name="Password" required />
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="Confirm Password">Confirm Password</label>
                    <input type="password" class="form-control" placeholder="Enter Confirm Password" id="ConfirmPassword" name="ConfirmPassword" />
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>User Level</label>
                    @if (ViewBag.Level != null)
                    {
                        @Html.DropDownListFor(m => m.LevelId, new SelectList(ViewBag.Level, "LevelId", "LevelName", 1), "--select UserLevel--", htmlAttributes: new { @id = "Level", @class = "form-control", required = "required" })

                    }
                    @Html.ValidationMessageFor(model => model.LevelId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">

                    <label>Roles</label>

                    <div id="role" class="form-control" style="height:100px">
                    </div>
                    @Html.ValidationMessageFor(model => model.UserSelectedRoles, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />

                </div>
                <div class="form-group col-md-offset-10">
                    <div>
                        @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-primary" })
                    </div>

                </div>

            </div>


        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*// model.levelId = $("#Level").val();

        //$("#role").load('@Url.Action("GetRoles","Account")' + '?model=' + myModel)
        $("#role").load('@Url.Action("GetRoles","Account", Model)' + '?model=' + myModel)*@
    <script>
        $(document).ready(function () {
            $("#role").prop("disabled", true);
            $("#Level").change(function () {
                populateRoles();
            });
            populateRoles();
        });

        function populateRoles() {
            if ($("#Level").val() != "select UserLevel") {
                // alert($("#Level").val());
                //alert($("#Id").val());
                var options = {};
                options.url = "/Users/GetRoles";
                options.type = "POST";
                options.data = JSON.stringify({ levelId: $("#Level").val(), Id: $("#Id").val() });
                // options.data = formContainer.serialize();
                options.dataType = "json";
                options.contentType = "application/json";
                options.success = function (roles) {


                    $("#role").empty();
                    //$("#role").append(" <select id='UserRoles' name='UserRoles'>")
                    for (var i = 0; i < roles.length; i++) {

                        //alert('<input type="checkbox" id="UserRoles' + i + '" Name="UserSelectedRoles" value="' + roles[i].Value + '"/>' + roles[i].Text + ' <br>');
                        //alert(roles[i].Selected);

                        if (roles[i].Selected)
                            $("#role").append('<input type="checkbox" required checked="true" id="UserRoles' + i + '" name="UserSelectedRoles" value="' + roles[i].Text + '"/>' + roles[i].Text + ' <br>');
                        else
                            $("#role").append('<input type="checkbox"  id="UserRoles' + i + '" name="UserSelectedRoles" value="' + roles[i].Text + '"/>' + roles[i].Text + ' <br>');

                    }
                    $("#role").prop("disabled", false);
                };
                options.error = function () { alert("Error retrieving roles!"); };
                $.ajax(options);
            }
            else {
                $("#role").empty();
                $("#role").append("<p> -- Please select Role -- </p>");
                $("#role").prop("disabled", true);
            }
        }
    </script>
}
