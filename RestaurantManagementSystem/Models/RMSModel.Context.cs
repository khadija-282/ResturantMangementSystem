//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RestaurantManagementSystem.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class POSEntities : DbContext
    {
        public POSEntities()
            : base("name=POSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ActivityLog> ActivityLogs { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<CategoryType> CategoryTypes { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Deal> Deals { get; set; }
        public virtual DbSet<DiscountType> DiscountTypes { get; set; }
        public virtual DbSet<InventoryItem> InventoryItems { get; set; }
        public virtual DbSet<InventoryLocation> InventoryLocations { get; set; }
        public virtual DbSet<InvIssueDetail> InvIssueDetails { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<InvReceiptDetail> InvReceiptDetails { get; set; }
        public virtual DbSet<InvReturn> InvReturns { get; set; }
        public virtual DbSet<InvReturnDetail> InvReturnDetails { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<MenuAccess> MenuAccesses { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<Province> Provinces { get; set; }
        public virtual DbSet<Recipe> Recipes { get; set; }
        public virtual DbSet<SCWTimer> SCWTimers { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<Unit> Units { get; set; }
        public virtual DbSet<UserLevel> UserLevels { get; set; }
        public virtual DbSet<Vendor> Vendors { get; set; }
        public virtual DbSet<Waiter> Waiters { get; set; }
        public virtual DbSet<Configuration> Configurations { get; set; }
        public virtual DbSet<FBR_Table> FBR_Table { get; set; }
        public virtual DbSet<vw_Contacts> vw_Contacts { get; set; }
        public virtual DbSet<vw_Items> vw_Items { get; set; }
        public virtual DbSet<InvIssue> InvIssues { get; set; }
        public virtual DbSet<InvReceipt> InvReceipts { get; set; }
    
        [DbFunction("POSEntities", "StringSplit")]
        public virtual IQueryable<StringSplit_Result> StringSplit(string @string, string separator)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            var separatorParameter = separator != null ?
                new ObjectParameter("Separator", separator) :
                new ObjectParameter("Separator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StringSplit_Result>("[POSEntities].[StringSplit](@String, @Separator)", stringParameter, separatorParameter);
        }
    
        public virtual ObjectResult<GetContacts_Result> GetContacts(string firstName, string lastName, string company, string jobTitle, string workPhone, string mobilePhone, string homePhone, string fax, string email, Nullable<int> countryId, Nullable<int> stateId, Nullable<int> cityId)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("JobTitle", jobTitle) :
                new ObjectParameter("JobTitle", typeof(string));
    
            var workPhoneParameter = workPhone != null ?
                new ObjectParameter("WorkPhone", workPhone) :
                new ObjectParameter("WorkPhone", typeof(string));
    
            var mobilePhoneParameter = mobilePhone != null ?
                new ObjectParameter("MobilePhone", mobilePhone) :
                new ObjectParameter("MobilePhone", typeof(string));
    
            var homePhoneParameter = homePhone != null ?
                new ObjectParameter("HomePhone", homePhone) :
                new ObjectParameter("HomePhone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContacts_Result>("GetContacts", firstNameParameter, lastNameParameter, companyParameter, jobTitleParameter, workPhoneParameter, mobilePhoneParameter, homePhoneParameter, faxParameter, emailParameter, countryIdParameter, stateIdParameter, cityIdParameter);
        }
    
        public virtual ObjectResult<GetContactsPerPage_Result> GetContactsPerPage(string search, Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string fNameFilter, string lNameFilter, string workPhFilter, string homePhFilter, string mobilePhFilter, string faxFilter, string emailFilter)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var fNameFilterParameter = fNameFilter != null ?
                new ObjectParameter("FNameFilter", fNameFilter) :
                new ObjectParameter("FNameFilter", typeof(string));
    
            var lNameFilterParameter = lNameFilter != null ?
                new ObjectParameter("LNameFilter", lNameFilter) :
                new ObjectParameter("LNameFilter", typeof(string));
    
            var workPhFilterParameter = workPhFilter != null ?
                new ObjectParameter("WorkPhFilter", workPhFilter) :
                new ObjectParameter("WorkPhFilter", typeof(string));
    
            var homePhFilterParameter = homePhFilter != null ?
                new ObjectParameter("HomePhFilter", homePhFilter) :
                new ObjectParameter("HomePhFilter", typeof(string));
    
            var mobilePhFilterParameter = mobilePhFilter != null ?
                new ObjectParameter("MobilePhFilter", mobilePhFilter) :
                new ObjectParameter("MobilePhFilter", typeof(string));
    
            var faxFilterParameter = faxFilter != null ?
                new ObjectParameter("FaxFilter", faxFilter) :
                new ObjectParameter("FaxFilter", typeof(string));
    
            var emailFilterParameter = emailFilter != null ?
                new ObjectParameter("EmailFilter", emailFilter) :
                new ObjectParameter("EmailFilter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContactsPerPage_Result>("GetContactsPerPage", searchParameter, pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, fNameFilterParameter, lNameFilterParameter, workPhFilterParameter, homePhFilterParameter, mobilePhFilterParameter, faxFilterParameter, emailFilterParameter);
        }
    
        public virtual int GetContactsPerPage_V2(string tableName, string columnsName, Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string search, string columnSearchQry, ObjectParameter totalRecords)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var columnsNameParameter = columnsName != null ?
                new ObjectParameter("ColumnsName", columnsName) :
                new ObjectParameter("ColumnsName", typeof(string));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var columnSearchQryParameter = columnSearchQry != null ?
                new ObjectParameter("ColumnSearchQry", columnSearchQry) :
                new ObjectParameter("ColumnSearchQry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetContactsPerPage_V2", tableNameParameter, columnsNameParameter, pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, searchParameter, columnSearchQryParameter, totalRecords);
        }
    
        public virtual ObjectResult<GetMenusByRoleId_Result> GetMenusByRoleId(Nullable<int> parentMenuId, string roleId)
        {
            var parentMenuIdParameter = parentMenuId.HasValue ?
                new ObjectParameter("parentMenuId", parentMenuId) :
                new ObjectParameter("parentMenuId", typeof(int));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMenusByRoleId_Result>("GetMenusByRoleId", parentMenuIdParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<GetPermissionsByUserId_Result> GetPermissionsByUserId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPermissionsByUserId_Result>("GetPermissionsByUserId", userIdParameter);
        }
    
        public virtual ObjectResult<GetPermissionsByUserId_v1_Result> GetPermissionsByUserId_v1(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPermissionsByUserId_v1_Result>("GetPermissionsByUserId_v1", userIdParameter);
        }
    
        public virtual ObjectResult<GetUserRoleByUserId_Result> GetUserRoleByUserId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserRoleByUserId_Result>("GetUserRoleByUserId", userIdParameter);
        }
    
        public virtual int SaveRolePermissions(string roleId, string menuIds)
        {
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            var menuIdsParameter = menuIds != null ?
                new ObjectParameter("MenuIds", menuIds) :
                new ObjectParameter("MenuIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveRolePermissions", roleIdParameter, menuIdsParameter);
        }
    
        public virtual int GetData(string tableName, string columnsName, Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string search, string columnSearchQry, ObjectParameter totalRecords)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var columnsNameParameter = columnsName != null ?
                new ObjectParameter("ColumnsName", columnsName) :
                new ObjectParameter("ColumnsName", typeof(string));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var columnSearchQryParameter = columnSearchQry != null ?
                new ObjectParameter("ColumnSearchQry", columnSearchQry) :
                new ObjectParameter("ColumnSearchQry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetData", tableNameParameter, columnsNameParameter, pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, searchParameter, columnSearchQryParameter, totalRecords);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
